version: "3.8"
x-postgres-env-config: &x-postgres-env-config
  POSTGRES_USER: "${POSTGRES_USER}"
  POSTGRES_DB: "${POSTGRES_DB}"
  POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
  POSTGRES_HOST: "${POSTGRES_HOST}"

services:

  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: python38-uwsgi
    networks:
      - backend
    restart: unless-stopped
    environment:
      <<: *x-postgres-env-config
      UWSGI_PROCESSES: "${UWSGI_PROCESSES}"
      SENTRY_DSN: "${SENTRY_DSN}"
      PYTHONPATH: "/src/app"
      DEPLOY_ENVIRONMENT: "${DEPLOY_ENVIRONMENT}"
    command: /wait_for_port.sh postgres:5432 -- /start.sh
    depends_on:
      - postgres
    volumes:
      - ../src/backend:/src/app:ro
    logging:
      options:
        max-size: "200m"
        max-file: "5"

  postgres:
    image: postgres:12.3
    restart: unless-stopped
    networks:
      - backend
    environment:
      <<: *x-postgres-env-config
    volumes:
      - pg_data:/var/lib/postgresql/data/
    logging:
      options:
        max-size: "200m"
        max-file: "5"

  nginx:
    image: "nginx:v1"
    build:
      context: .
      dockerfile: Dockerfile
      target: nginx
    volumes:
      - ${CONFIGS_DIR}/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ${CONFIGS_DIR}/nginx/acme/:/var/www/letsencrypt:ro
      - /etc/letsencrypt/:/etc/letsencrypt/:ro
    restart: unless-stopped
    networks:
      - public
      - backend
    ports:
      - ${PUBLIC_NGINX_80_PORT:-8080:80}
      - ${PUBLIC_NGINX_443_PORT:-443}
    depends_on:
      - backend
    logging:
      options:
        max-size: "200m"
        max-file: "5"

networks:
  backend:
  public:
    driver: bridge

volumes:
  pg_data:
